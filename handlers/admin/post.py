from aiogram import Router, types, Bot
from aiogram.filters.text import Text
from filters.admin_filter import AdminFilter
from aiogram.fsm.context import FSMContext
from database.main import Database
from states.admin import AdminStates
from keyboards.default import cancel_keyboard, admin_keyboard
from util.mail import Mailing
from keyboards.inline import post_confirmation_keyboard

r = Router()
r.message.filter(AdminFilter())

@r.message(Text("üì§ –†–∞—Å—Å—ã–ª–∫–∞"))
async def post_message(m: types.Message, state: FSMContext):
    await m.answer("–ü—Ä–∏—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏. –î–æ–ø—É—Å–∫–∞—é—Ç—Å—è –≤—Å–µ –≤–∏–¥—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –∫—Ä–æ–º–µ –∞–ª—å–±–æ–º–æ–≤", reply_markup=cancel_keyboard())
    await state.set_state(AdminStates.post)

@r.message(AdminStates.post)
async def post_confirm(m: types.Message, state: FSMContext):
    await state.update_data(data={'message' : m})
    await m.answer("–ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º?", reply_markup=post_confirmation_keyboard())

@r.callback_query(Text(startswith="post_"))
async def post_got_decision(c: types.CallbackQuery, bot: Bot, db: Database, state: FSMContext):
    decision = c.data.split("_")[1]
    users_list = await db.fetch_all_users()
    message = (await state.get_data())['message']
    mail = Mailing(m=message, bot=bot, admin_id=c.from_user.id, users=users_list)

    if decision == 'confirm':
        await c.message.delete()
        await c.message.answer("–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞!\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏–¥—É—Ç —Å—é–¥–∞ –ø–æ—Å–ª–µ –µ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è", reply_markup=admin_keyboard())
        await state.clear()
        await mail.run()
    else:
        await c.message.delete()
        await c.message.answer("–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞", reply_markup=admin_keyboard())
        await state.clear()
